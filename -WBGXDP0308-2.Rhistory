to_time     = "23:59:59",
workStatus  = c("All", "SupervisorAssigned", "InterviewerAssigned",
"RejectedBySupervisor", "Completed", "ApprovedBySupervisor",
"RejectedByHeadquarters", "ApprovedByHeadquarters"),
addTranslation        = T,
translationLanguage   = NULL,
reloadTimeDiff        = 1,
inShinyApp            = FALSE,
verbose               = FALSE,
weight_file           = NULL,
process_mapquestions  = TRUE,
combineFiles          = FALSE
)
paradata <- suso_export_paradata(
server = suso_get_api_key("susoServer"),
apiUser = suso_get_api_key("susoUser"),
apiPass = suso_get_api_key("susoPass"),
token = NULL,
workspace = suso_get_api_key("workspace"),
questID = questlist[3,QuestionnaireId],
version = 1,
from_date = "2025-07-01",
from_time = "00:00:00",
to_date = "2025-07-08",
to_time = "23:59:59",
workStatus = c("All", "SupervisorAssigned", "InterviewerAssigned",
"RejectedBySupervisor", "Completed", "ApprovedBySupervisor",
"RejectedByHeadquarters", "ApprovedByHeadquarters"),
reloadTimeDiff = 1,
inShinyApp = FALSE,
multiCore = NULL,
onlyActiveEvents = FALSE,
asList = FALSE,
allResponses = TRUE,
gpsVarName = NA,
verbose = FALSE,
showProgress = FALSE
)
#Export date = June 1 - July 8, 2025
data <- suso_export(
server      = suso_get_api_key("susoServer"),
apiUser     = suso_get_api_key("susoUser"),
apiPass     = suso_get_api_key("susoPass"),
token       = NULL,
workspace   = suso_get_api_key("workspace"),
questID     = questlist[3, QuestionnaireId],
version     = 1,
from_date   = "2025-07-01",
from_time   = "00:00:00",
to_date     = "2025-07-30",
to_time     = "23:59:59",
workStatus  = c("All", "SupervisorAssigned", "InterviewerAssigned",
"RejectedBySupervisor", "Completed", "ApprovedBySupervisor",
"RejectedByHeadquarters", "ApprovedByHeadquarters"),
addTranslation        = FALSE,
translationLanguage   = NULL,
reloadTimeDiff        = 1,
inShinyApp            = FALSE,
verbose               = FALSE,
weight_file           = NULL,
process_mapquestions  = TRUE,
combineFiles          = FALSE
)
View(data)
questlist[3, QuestionnaireId]
print(questlist)
#Export date = June 1 - July 8, 2025
data <- suso_export(
server      = suso_get_api_key("susoServer"),
apiUser     = suso_get_api_key("susoUser"),
apiPass     = suso_get_api_key("susoPass"),
token       = NULL,
workspace   = suso_get_api_key("workspace"),
questID     = questlist[4, QuestionnaireId],
version     = 1,
from_date   = "2025-07-01",
from_time   = "00:00:00",
to_date     = "2025-07-30",
to_time     = "23:59:59",
workStatus  = c("All", "SupervisorAssigned", "InterviewerAssigned",
"RejectedBySupervisor", "Completed", "ApprovedBySupervisor",
"RejectedByHeadquarters", "ApprovedByHeadquarters"),
addTranslation        = FALSE,
translationLanguage   = NULL,
reloadTimeDiff        = 1,
inShinyApp            = FALSE,
verbose               = FALSE,
weight_file           = NULL,
process_mapquestions  = TRUE,
combineFiles          = FALSE
)
questlist[4, QuestionnaireId]
print(questlist)
#Export date = June 1 - July 8, 2025
data <- suso_export(
server      = suso_get_api_key("susoServer"),
apiUser     = suso_get_api_key("susoUser"),
apiPass     = suso_get_api_key("susoPass"),
token       = NULL,
workspace   = suso_get_api_key("workspace"),
questID     = questlist[5, QuestionnaireId],
version     = 2,
from_date   = "2025-07-01",
from_time   = "00:00:00",
to_date     = "2025-07-30",
to_time     = "23:59:59",
workStatus  = c("All", "SupervisorAssigned", "InterviewerAssigned",
"RejectedBySupervisor", "Completed", "ApprovedBySupervisor",
"RejectedByHeadquarters", "ApprovedByHeadquarters"),
addTranslation        = TRUE,
translationLanguage   = "Arabic",
reloadTimeDiff        = 1,
inShinyApp            = FALSE,
verbose               = FALSE,
weight_file           = NULL,
process_mapquestions  = TRUE,
combineFiles          = FALSE
)
#Export date = June 1 - July 8, 2025
data <- suso_export(
server      = suso_get_api_key("susoServer"),
apiUser     = suso_get_api_key("susoUser"),
apiPass     = suso_get_api_key("susoPass"),
token       = NULL,
workspace   = suso_get_api_key("workspace"),
questID     = questlist[5, QuestionnaireId],
version     = 2,
from_date   = "2025-07-01",
from_time   = "00:00:00",
to_date     = "2025-07-30",
to_time     = "23:59:59",
workStatus  = c("All", "SupervisorAssigned", "InterviewerAssigned",
"RejectedBySupervisor", "Completed", "ApprovedBySupervisor",
"RejectedByHeadquarters", "ApprovedByHeadquarters"),
addTranslation        = FALSE,
translationLanguage   = NULL,
reloadTimeDiff        = 1,
inShinyApp            = FALSE,
verbose               = FALSE,
weight_file           = NULL,
process_mapquestions  = TRUE,
combineFiles          = FALSE
)
#Export date = June 1 - July 8, 2025
data <- suso_export(
server      = suso_get_api_key("susoServer"),
apiUser     = suso_get_api_key("susoUser"),
apiPass     = suso_get_api_key("susoPass"),
token       = NULL,
workspace   = suso_get_api_key("workspace"),
questID     = questlist[4, QuestionnaireId],
version     = 1,
from_date   = "2025-07-01",
from_time   = "00:00:00",
to_date     = "2025-07-30",
to_time     = "23:59:59",
workStatus  = c("All", "SupervisorAssigned", "InterviewerAssigned",
"RejectedBySupervisor", "Completed", "ApprovedBySupervisor",
"RejectedByHeadquarters", "ApprovedByHeadquarters"),
addTranslation        = FALSE,
translationLanguage   = NULL,
reloadTimeDiff        = 1,
inShinyApp            = FALSE,
verbose               = FALSE,
weight_file           = NULL,
process_mapquestions  = TRUE,
combineFiles          = FALSE
)
#install.packages("devtools")
devtools::install_github("michael-cw/SurveySolutionsAPIv2", build_vignettes = T)
#load packages
library(SurveySolutionsAPIv2)
# Before setting key, make sure to generate a key in the server
suso_clear_keys()
suso_set_key("https://yemenhbs2025-2-demo.mysurvey.solutions/", "api_cb", "yemenHBS2025!", "primary")
suso_keys()
questlist <- suso_getQuestDetails()
print(questlist)
questlist[4, QuestionnaireId]
#Export date = June 1 - July 8, 2025
data <- suso_export(
server      = suso_get_api_key("susoServer"),
apiUser     = suso_get_api_key("susoUser"),
apiPass     = suso_get_api_key("susoPass"),
token       = NULL,
workspace   = suso_get_api_key("workspace"),
questID     = questlist[4, QuestionnaireId],
version     = 1,
from_date   = "2025-07-01",
from_time   = "00:00:00",
to_date     = "2025-07-30",
to_time     = "23:59:59",
workStatus  = c("All", "SupervisorAssigned", "InterviewerAssigned",
"RejectedBySupervisor", "Completed", "ApprovedBySupervisor",
"RejectedByHeadquarters", "ApprovedByHeadquarters"),
addTranslation        = FALSE,
translationLanguage   = NULL,
reloadTimeDiff        = 1,
inShinyApp            = FALSE,
verbose               = FALSE,
weight_file           = NULL,
process_mapquestions  = TRUE,
combineFiles          = FALSE
)
remove.packages("SurveySolutionsAPIv2")
#install.packages("devtools")
devtools::install_github("michael-cw/SurveySolutionsAPIv2", build_vignettes = T)
#install.packages("devtools")
devtools::install_github("michael-cw/SurveySolutionsAPIv2", build_vignettes = T)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
#install.packages("devtools")
devtools::install_github("michael-cw/SurveySolutionsAPIv2", build_vignettes = T)
#load packages
library(SurveySolutionsAPIv2)
#install.packages("devtools")
devtools::install_github("michael-cw/SurveySolutionsAPIv2", build_vignettes = T)
#install.packages("ggplot2")
#install.packages("data.table")
#install.packages("raster")
#install.packages("sp")
#install.packages("leaflet")
#install.packages("rnaturalearth")
#install.packages("rnaturalearthdata")
#install.packages("sf")
#install.packages("exactextractr")
#install.packages("terra")
remove.packages("SurveySolutionsAPIv2")
#install.packages("devtools")
devtools::install_github("michael-cw/SurveySolutionsAPIv2", build_vignettes = T)
#load packages
library(SurveySolutionsAPIv2)
devtools::install_github("michael-cw/SurveySolutionsAPIv2", build_vignettes = T)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
#install.packages("devtools")
devtools::install_github("michael-cw/SurveySolutionsAPIv2", build_vignettes = T)
renv::status()
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
# 1) Clean broken install
unlink("C:/Users/wb569257/OneDrive - WBG/Documents/GitHub/yemen_access/renv/library/windows/R-4.4/x86_64-w64-mingw32/SurveySolutionsAPIv2",
recursive = TRUE, force = TRUE)
unlink("C:/Users/wb569257/OneDrive - WBG/Documents/GitHub/yemen_access/renv/library/windows/R-4.4/x86_64-w64-mingw32/00LOCK-SurveySolutionsAPIv2",
recursive = TRUE, force = TRUE)
renv::clean(prompt = FALSE)
# 2) Install via renv (no vignettes)
Sys.setenv(R_BUILD_VIGNETTES = "false")
renv::install("michael-cw/SurveySolutionsAPIv2", rebuild = TRUE)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
#install.packages("devtools")
#devtools::install_github("michael-cw/SurveySolutionsAPIv2", build_vignettes = T)
#install.packages("ggplot2")
#install.packages("data.table")
#install.packages("raster")
#install.packages("sp")
#install.packages("leaflet")
#install.packages("rnaturalearth")
#install.packages("rnaturalearthdata")
#install.packages("sf")
#install.packages("exactextractr")
#install.packages("terra")
#load packages
library(SurveySolutionsAPIv2)
library(ggplot2)
library(data.table)
library(sp)
library(raster)
library(leaflet)
library(rnaturalearth)
library(rnaturalearthdata)
library(sf)
library(terra)
library(exactextractr)
# Before setting key, make sure to generate a key in the server
suso_clear_keys()
suso_set_key("https://yemenhbs2025-2-demo.mysurvey.solutions/", "api_cb", "yemenHBS2025!", "primary")
suso_keys()
ws <- suso_getWorkspace()
print(head(ws))
sv <- suso_getSV(workspace = "primary")
print(head(sv))
questlist <- suso_getQuestDetails()
print(questlist)
questlist[4, QuestionnaireId]
interview_data <- suso_getINT()
print(interview_data)
interview_data <- suso_getINT()
print(interview_data)
#Export date = June 1 - July 8, 2025
data <- suso_export(
server      = suso_get_api_key("susoServer"),
apiUser     = suso_get_api_key("susoUser"),
apiPass     = suso_get_api_key("susoPass"),
token       = NULL,
workspace   = suso_get_api_key("workspace"),
questID     = questlist[4, QuestionnaireId],
version     = 1,
from_date   = "2025-07-01",
from_time   = "00:00:00",
to_date     = "2025-07-30",
to_time     = "23:59:59",
workStatus  = c("All", "SupervisorAssigned", "InterviewerAssigned",
"RejectedBySupervisor", "Completed", "ApprovedBySupervisor",
"RejectedByHeadquarters", "ApprovedByHeadquarters"),
addTranslation        = FALSE,
translationLanguage   = NULL,
reloadTimeDiff        = 1,
inShinyApp            = FALSE,
verbose               = FALSE,
weight_file           = NULL,
process_mapquestions  = TRUE,
combineFiles          = FALSE
)
renv::deactivate()
unlink("renv", recursive = TRUE, force = TRUE)  # deletes the renv/ folder
unlink("renv", recursive = TRUE, force = TRUE)  # deletes the renv/ folder
unlink("renv.lock", force = TRUE)               # deletes the lockfile
knitr::opts_chunk$
# renv::deactivate()
# unlink("renv", recursive = TRUE, force = TRUE)  # deletes the renv/ folder
# unlink("renv.lock", force = TRUE)               # deletes the lockfile
# unlink(".Rprofile")
.libPaths()
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
install.packages("devtools")
devtools::install_github("michael-cw/SurveySolutionsAPIv2", build_vignettes = T)
install.packages("ggplot2")
install.packages("data.table")
install.packages("raster")
install.packages("sp")
install.packages("leaflet")
install.packages("rnaturalearth")
install.packages("rnaturalearthdata")
install.packages("sf")
install.packages("exactextractr")
install.packages("terra")
# renv::deactivate()
# unlink("renv", recursive = TRUE, force = TRUE)  # deletes the renv/ folder
# unlink("renv.lock", force = TRUE)               # deletes the lockfile
# unlink(".Rprofile")
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
# install.packages("devtools")
# devtools::install_github("michael-cw/SurveySolutionsAPIv2", build_vignettes = T)
# install.packages("ggplot2")
# install.packages("data.table")
# install.packages("raster")
# install.packages("sp")
# install.packages("leaflet")
# install.packages("rnaturalearth")
# install.packages("rnaturalearthdata")
# install.packages("sf")
# install.packages("exactextractr")
# install.packages("terra")
#load packages
library(SurveySolutionsAPIv2)
library(ggplot2)
library(data.table)
library(sp)
library(raster)
library(leaflet)
library(rnaturalearth)
library(rnaturalearthdata)
library(sf)
library(terra)
library(exactextractr)
# Before setting key, make sure to generate a key in the server
suso_clear_keys()
suso_set_key("https://yemenhbs2025-2-demo.mysurvey.solutions/", "api_cb", "yemenHBS2025!", "primary")
suso_keys()
questlist <- suso_getQuestDetails()
questlist <- suso_getQuestDetails()
print(questlist)
interview_data <- suso_getINT()
print(interview_data)
#Export date = June 1 - July 8, 2025
data <- suso_export(
server      = suso_get_api_key("susoServer"),
apiUser     = suso_get_api_key("susoUser"),
apiPass     = suso_get_api_key("susoPass"),
token       = NULL,
workspace   = suso_get_api_key("workspace"),
questID     = questlist[4, QuestionnaireId],
version     = 1,
from_date   = "2025-07-01",
from_time   = "00:00:00",
to_date     = "2025-07-30",
to_time     = "23:59:59",
workStatus  = c("All", "SupervisorAssigned", "InterviewerAssigned",
"RejectedBySupervisor", "Completed", "ApprovedBySupervisor",
"RejectedByHeadquarters", "ApprovedByHeadquarters"),
addTranslation        = FALSE,
translationLanguage   = NULL,
reloadTimeDiff        = 1,
inShinyApp            = FALSE,
verbose               = FALSE,
weight_file           = NULL,
process_mapquestions  = TRUE,
combineFiles          = FALSE
)
#Export date = June 1 - July 8, 2025
data <- suso_export(
server      = suso_get_api_key("susoServer"),
apiUser     = suso_get_api_key("susoUser"),
apiPass     = suso_get_api_key("susoPass"),
token       = NULL,
workspace   = suso_get_api_key("workspace"),
questID     = questlist[4, QuestionnaireId],
version     = 1,
from_date   = "2025-07-01",
from_time   = "00:00:00",
to_date     = "2025-07-30",
to_time     = "23:59:59",
workStatus  = c("All", "SupervisorAssigned", "InterviewerAssigned",
"RejectedBySupervisor", "Completed", "ApprovedBySupervisor",
"RejectedByHeadquarters", "ApprovedByHeadquarters"),
addTranslation        = FALSE,
translationLanguage   = NULL,
reloadTimeDiff        = 1,
inShinyApp            = FALSE,
verbose               = FALSE,
weight_file           = NULL,
process_mapquestions  = TRUE,
combineFiles          = FALSE
)
suso_set_key("https://yemenhbs2025-2-demo.mysurvey.solutions", "api_cb", "yemenHBS2025!", "primary")
suso_keys()
questlist <- suso_getQuestDetails()
print(questlist)
#Export date = June 1 - July 8, 2025
data <- suso_export(
server      = suso_get_api_key("susoServer"),
apiUser     = suso_get_api_key("susoUser"),
apiPass     = suso_get_api_key("susoPass"),
token       = NULL,
workspace   = suso_get_api_key("workspace"),
questID     = questlist[4, QuestionnaireId],
version     = 1,
from_date   = "2025-07-01",
from_time   = "00:00:00",
to_date     = "2025-07-30",
to_time     = "23:59:59",
workStatus  = c("All", "SupervisorAssigned", "InterviewerAssigned",
"RejectedBySupervisor", "Completed", "ApprovedBySupervisor",
"RejectedByHeadquarters", "ApprovedByHeadquarters"),
addTranslation        = FALSE,
translationLanguage   = NULL,
reloadTimeDiff        = 1,
inShinyApp            = FALSE,
verbose               = FALSE,
weight_file           = NULL,
process_mapquestions  = TRUE,
combineFiles          = FALSE
)
remove.packages(c("curl", "httr", "httr2"))
install.packages(c("curl", "httr", "httr2"))
# renv::deactivate()
# unlink("renv", recursive = TRUE, force = TRUE)  # deletes the renv/ folder
# unlink("renv.lock", force = TRUE)               # deletes the lockfile
# unlink(".Rprofile")
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
install.packages("remotes")
remotes::install_github("michael-cw/SurveySolutionsAPIv2")
# install.packages("devtools")
devtools::install_github("michael-cw/SurveySolutionsAPIv2", build_vignettes = T)
#load packages
library(SurveySolutionsAPIv2)
library(ggplot2)
library(data.table)
library(sp)
library(raster)
library(raster)
library(leaflet)
library(rnaturalearth)
library(rnaturalearthdata)
library(sf)
library(raster)
library(leaflet)
library(rnaturalearth)
library(rnaturalearthdata)
library(sf)
library(terra)
library(exactextractr)
# Before setting key, make sure to generate a key in the server
suso_clear_keys()
suso_set_key("https://yemenhbs2025-2-demo.mysurvey.solutions", "api_cb", "yemenHBS2025!", "primary")
suso_keys()
questlist <- suso_getQuestDetails()
print(questlist)
#Export date = June 1 - July 8, 2025
data <- suso_export(
server      = suso_get_api_key("susoServer"),
apiUser     = suso_get_api_key("susoUser"),
apiPass     = suso_get_api_key("susoPass"),
token       = NULL,
workspace   = suso_get_api_key("workspace"),
questID     = questlist[4, QuestionnaireId],
version     = 1,
from_date   = "2025-07-01",
from_time   = "00:00:00",
to_date     = "2025-07-30",
to_time     = "23:59:59",
workStatus  = c("All", "SupervisorAssigned", "InterviewerAssigned",
"RejectedBySupervisor", "Completed", "ApprovedBySupervisor",
"RejectedByHeadquarters", "ApprovedByHeadquarters"),
addTranslation        = FALSE,
translationLanguage   = NULL,
reloadTimeDiff        = 1,
inShinyApp            = FALSE,
verbose               = FALSE,
weight_file           = NULL,
process_mapquestions  = TRUE,
combineFiles          = FALSE
)
